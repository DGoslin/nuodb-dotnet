//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18047
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WindowsFormsSample {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("testDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class testDataSet : global::System.Data.DataSet {
        
        private PLAYERSDataTable tablePLAYERS;
        
        private SCORINGDataTable tableSCORING;
        
        private TEAMSDataTable tableTEAMS;
        
        private global::System.Data.DataRelation relationPLAYERS_SCORING;
        
        private global::System.Data.DataRelation relationTEAMS_SCORING;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public testDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected testDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PLAYERS"] != null)) {
                    base.Tables.Add(new PLAYERSDataTable(ds.Tables["PLAYERS"]));
                }
                if ((ds.Tables["SCORING"] != null)) {
                    base.Tables.Add(new SCORINGDataTable(ds.Tables["SCORING"]));
                }
                if ((ds.Tables["TEAMS"] != null)) {
                    base.Tables.Add(new TEAMSDataTable(ds.Tables["TEAMS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PLAYERSDataTable PLAYERS {
            get {
                return this.tablePLAYERS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SCORINGDataTable SCORING {
            get {
                return this.tableSCORING;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TEAMSDataTable TEAMS {
            get {
                return this.tableTEAMS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            testDataSet cln = ((testDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PLAYERS"] != null)) {
                    base.Tables.Add(new PLAYERSDataTable(ds.Tables["PLAYERS"]));
                }
                if ((ds.Tables["SCORING"] != null)) {
                    base.Tables.Add(new SCORINGDataTable(ds.Tables["SCORING"]));
                }
                if ((ds.Tables["TEAMS"] != null)) {
                    base.Tables.Add(new TEAMSDataTable(ds.Tables["TEAMS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablePLAYERS = ((PLAYERSDataTable)(base.Tables["PLAYERS"]));
            if ((initTable == true)) {
                if ((this.tablePLAYERS != null)) {
                    this.tablePLAYERS.InitVars();
                }
            }
            this.tableSCORING = ((SCORINGDataTable)(base.Tables["SCORING"]));
            if ((initTable == true)) {
                if ((this.tableSCORING != null)) {
                    this.tableSCORING.InitVars();
                }
            }
            this.tableTEAMS = ((TEAMSDataTable)(base.Tables["TEAMS"]));
            if ((initTable == true)) {
                if ((this.tableTEAMS != null)) {
                    this.tableTEAMS.InitVars();
                }
            }
            this.relationPLAYERS_SCORING = this.Relations["PLAYERS_SCORING"];
            this.relationTEAMS_SCORING = this.Relations["TEAMS_SCORING"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "testDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/testDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePLAYERS = new PLAYERSDataTable();
            base.Tables.Add(this.tablePLAYERS);
            this.tableSCORING = new SCORINGDataTable();
            base.Tables.Add(this.tableSCORING);
            this.tableTEAMS = new TEAMSDataTable();
            base.Tables.Add(this.tableTEAMS);
            this.relationPLAYERS_SCORING = new global::System.Data.DataRelation("PLAYERS_SCORING", new global::System.Data.DataColumn[] {
                        this.tablePLAYERS.PLAYERIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableSCORING.PLAYERIDColumn}, false);
            this.Relations.Add(this.relationPLAYERS_SCORING);
            this.relationTEAMS_SCORING = new global::System.Data.DataRelation("TEAMS_SCORING", new global::System.Data.DataColumn[] {
                        this.tableTEAMS.YEARColumn,
                        this.tableTEAMS.TEAMIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableSCORING.YEARColumn,
                        this.tableSCORING.TEAMIDColumn}, false);
            this.Relations.Add(this.relationTEAMS_SCORING);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePLAYERS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSCORING() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTEAMS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            testDataSet ds = new testDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PLAYERSRowChangeEventHandler(object sender, PLAYERSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SCORINGRowChangeEventHandler(object sender, SCORINGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TEAMSRowChangeEventHandler(object sender, TEAMSRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PLAYERSDataTable : global::System.Data.TypedTableBase<PLAYERSRow> {
            
            private global::System.Data.DataColumn columnPLAYERID;
            
            private global::System.Data.DataColumn columnFIRSTNAME;
            
            private global::System.Data.DataColumn columnLASTNAME;
            
            private global::System.Data.DataColumn columnHEIGHT;
            
            private global::System.Data.DataColumn columnWEIGHT;
            
            private global::System.Data.DataColumn columnFIRSTNHL;
            
            private global::System.Data.DataColumn columnLASTNHL;
            
            private global::System.Data.DataColumn columnPOSITION;
            
            private global::System.Data.DataColumn columnBIRTHYEAR;
            
            private global::System.Data.DataColumn columnBIRTHMON;
            
            private global::System.Data.DataColumn columnBIRTHDAY;
            
            private global::System.Data.DataColumn columnBIRTHCOUNTRY;
            
            private global::System.Data.DataColumn columnBIRTHSTATE;
            
            private global::System.Data.DataColumn columnBIRTHCITY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLAYERSDataTable() {
                this.TableName = "PLAYERS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PLAYERSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PLAYERSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PLAYERIDColumn {
                get {
                    return this.columnPLAYERID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIRSTNAMEColumn {
                get {
                    return this.columnFIRSTNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LASTNAMEColumn {
                get {
                    return this.columnLASTNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HEIGHTColumn {
                get {
                    return this.columnHEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WEIGHTColumn {
                get {
                    return this.columnWEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIRSTNHLColumn {
                get {
                    return this.columnFIRSTNHL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LASTNHLColumn {
                get {
                    return this.columnLASTNHL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn POSITIONColumn {
                get {
                    return this.columnPOSITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BIRTHYEARColumn {
                get {
                    return this.columnBIRTHYEAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BIRTHMONColumn {
                get {
                    return this.columnBIRTHMON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BIRTHDAYColumn {
                get {
                    return this.columnBIRTHDAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BIRTHCOUNTRYColumn {
                get {
                    return this.columnBIRTHCOUNTRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BIRTHSTATEColumn {
                get {
                    return this.columnBIRTHSTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BIRTHCITYColumn {
                get {
                    return this.columnBIRTHCITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLAYERSRow this[int index] {
                get {
                    return ((PLAYERSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLAYERSRowChangeEventHandler PLAYERSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLAYERSRowChangeEventHandler PLAYERSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLAYERSRowChangeEventHandler PLAYERSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLAYERSRowChangeEventHandler PLAYERSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPLAYERSRow(PLAYERSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLAYERSRow AddPLAYERSRow(string PLAYERID, string FIRSTNAME, string LASTNAME, int HEIGHT, int WEIGHT, int FIRSTNHL, int LASTNHL, string POSITION, int BIRTHYEAR, int BIRTHMON, int BIRTHDAY, string BIRTHCOUNTRY, string BIRTHSTATE, string BIRTHCITY) {
                PLAYERSRow rowPLAYERSRow = ((PLAYERSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PLAYERID,
                        FIRSTNAME,
                        LASTNAME,
                        HEIGHT,
                        WEIGHT,
                        FIRSTNHL,
                        LASTNHL,
                        POSITION,
                        BIRTHYEAR,
                        BIRTHMON,
                        BIRTHDAY,
                        BIRTHCOUNTRY,
                        BIRTHSTATE,
                        BIRTHCITY};
                rowPLAYERSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPLAYERSRow);
                return rowPLAYERSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLAYERSRow FindByPLAYERID(string PLAYERID) {
                return ((PLAYERSRow)(this.Rows.Find(new object[] {
                            PLAYERID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PLAYERSDataTable cln = ((PLAYERSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PLAYERSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPLAYERID = base.Columns["PLAYERID"];
                this.columnFIRSTNAME = base.Columns["FIRSTNAME"];
                this.columnLASTNAME = base.Columns["LASTNAME"];
                this.columnHEIGHT = base.Columns["HEIGHT"];
                this.columnWEIGHT = base.Columns["WEIGHT"];
                this.columnFIRSTNHL = base.Columns["FIRSTNHL"];
                this.columnLASTNHL = base.Columns["LASTNHL"];
                this.columnPOSITION = base.Columns["POSITION"];
                this.columnBIRTHYEAR = base.Columns["BIRTHYEAR"];
                this.columnBIRTHMON = base.Columns["BIRTHMON"];
                this.columnBIRTHDAY = base.Columns["BIRTHDAY"];
                this.columnBIRTHCOUNTRY = base.Columns["BIRTHCOUNTRY"];
                this.columnBIRTHSTATE = base.Columns["BIRTHSTATE"];
                this.columnBIRTHCITY = base.Columns["BIRTHCITY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPLAYERID = new global::System.Data.DataColumn("PLAYERID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLAYERID);
                this.columnFIRSTNAME = new global::System.Data.DataColumn("FIRSTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIRSTNAME);
                this.columnLASTNAME = new global::System.Data.DataColumn("LASTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLASTNAME);
                this.columnHEIGHT = new global::System.Data.DataColumn("HEIGHT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHEIGHT);
                this.columnWEIGHT = new global::System.Data.DataColumn("WEIGHT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWEIGHT);
                this.columnFIRSTNHL = new global::System.Data.DataColumn("FIRSTNHL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIRSTNHL);
                this.columnLASTNHL = new global::System.Data.DataColumn("LASTNHL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLASTNHL);
                this.columnPOSITION = new global::System.Data.DataColumn("POSITION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSITION);
                this.columnBIRTHYEAR = new global::System.Data.DataColumn("BIRTHYEAR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIRTHYEAR);
                this.columnBIRTHMON = new global::System.Data.DataColumn("BIRTHMON", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIRTHMON);
                this.columnBIRTHDAY = new global::System.Data.DataColumn("BIRTHDAY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIRTHDAY);
                this.columnBIRTHCOUNTRY = new global::System.Data.DataColumn("BIRTHCOUNTRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIRTHCOUNTRY);
                this.columnBIRTHSTATE = new global::System.Data.DataColumn("BIRTHSTATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIRTHSTATE);
                this.columnBIRTHCITY = new global::System.Data.DataColumn("BIRTHCITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIRTHCITY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPLAYERID}, true));
                this.columnPLAYERID.AllowDBNull = false;
                this.columnPLAYERID.Unique = true;
                this.columnPLAYERID.MaxLength = 10;
                this.columnFIRSTNAME.MaxLength = 32;
                this.columnLASTNAME.MaxLength = 32;
                this.columnFIRSTNHL.AllowDBNull = false;
                this.columnLASTNHL.AllowDBNull = false;
                this.columnPOSITION.MaxLength = 8;
                this.columnBIRTHCOUNTRY.MaxLength = 32;
                this.columnBIRTHSTATE.MaxLength = 32;
                this.columnBIRTHCITY.MaxLength = 32;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLAYERSRow NewPLAYERSRow() {
                return ((PLAYERSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PLAYERSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PLAYERSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PLAYERSRowChanged != null)) {
                    this.PLAYERSRowChanged(this, new PLAYERSRowChangeEvent(((PLAYERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PLAYERSRowChanging != null)) {
                    this.PLAYERSRowChanging(this, new PLAYERSRowChangeEvent(((PLAYERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PLAYERSRowDeleted != null)) {
                    this.PLAYERSRowDeleted(this, new PLAYERSRowChangeEvent(((PLAYERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PLAYERSRowDeleting != null)) {
                    this.PLAYERSRowDeleting(this, new PLAYERSRowChangeEvent(((PLAYERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePLAYERSRow(PLAYERSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                testDataSet ds = new testDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PLAYERSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SCORINGDataTable : global::System.Data.TypedTableBase<SCORINGRow> {
            
            private global::System.Data.DataColumn columnPLAYERID;
            
            private global::System.Data.DataColumn columnYEAR;
            
            private global::System.Data.DataColumn columnSTINT;
            
            private global::System.Data.DataColumn columnTEAMID;
            
            private global::System.Data.DataColumn columnPOSITION;
            
            private global::System.Data.DataColumn columnGAMESPLAYED;
            
            private global::System.Data.DataColumn columnGOALS;
            
            private global::System.Data.DataColumn columnASSISTS;
            
            private global::System.Data.DataColumn columnPENALTYMINUTES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCORINGDataTable() {
                this.TableName = "SCORING";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SCORINGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SCORINGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PLAYERIDColumn {
                get {
                    return this.columnPLAYERID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YEARColumn {
                get {
                    return this.columnYEAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STINTColumn {
                get {
                    return this.columnSTINT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TEAMIDColumn {
                get {
                    return this.columnTEAMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn POSITIONColumn {
                get {
                    return this.columnPOSITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GAMESPLAYEDColumn {
                get {
                    return this.columnGAMESPLAYED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GOALSColumn {
                get {
                    return this.columnGOALS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ASSISTSColumn {
                get {
                    return this.columnASSISTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PENALTYMINUTESColumn {
                get {
                    return this.columnPENALTYMINUTES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCORINGRow this[int index] {
                get {
                    return ((SCORINGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SCORINGRowChangeEventHandler SCORINGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SCORINGRowChangeEventHandler SCORINGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SCORINGRowChangeEventHandler SCORINGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SCORINGRowChangeEventHandler SCORINGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSCORINGRow(SCORINGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCORINGRow AddSCORINGRow(PLAYERSRow parentPLAYERSRowByPLAYERS_SCORING, int YEAR, int STINT, string TEAMID, string POSITION, int GAMESPLAYED, int GOALS, int ASSISTS, int PENALTYMINUTES) {
                SCORINGRow rowSCORINGRow = ((SCORINGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        YEAR,
                        STINT,
                        TEAMID,
                        POSITION,
                        GAMESPLAYED,
                        GOALS,
                        ASSISTS,
                        PENALTYMINUTES};
                if ((parentPLAYERSRowByPLAYERS_SCORING != null)) {
                    columnValuesArray[0] = parentPLAYERSRowByPLAYERS_SCORING[0];
                }
                rowSCORINGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSCORINGRow);
                return rowSCORINGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCORINGRow FindByPLAYERIDYEARSTINTTEAMIDPOSITION(string PLAYERID, int YEAR, int STINT, string TEAMID, string POSITION) {
                return ((SCORINGRow)(this.Rows.Find(new object[] {
                            PLAYERID,
                            YEAR,
                            STINT,
                            TEAMID,
                            POSITION})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SCORINGDataTable cln = ((SCORINGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SCORINGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPLAYERID = base.Columns["PLAYERID"];
                this.columnYEAR = base.Columns["YEAR"];
                this.columnSTINT = base.Columns["STINT"];
                this.columnTEAMID = base.Columns["TEAMID"];
                this.columnPOSITION = base.Columns["POSITION"];
                this.columnGAMESPLAYED = base.Columns["GAMESPLAYED"];
                this.columnGOALS = base.Columns["GOALS"];
                this.columnASSISTS = base.Columns["ASSISTS"];
                this.columnPENALTYMINUTES = base.Columns["PENALTYMINUTES"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPLAYERID = new global::System.Data.DataColumn("PLAYERID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLAYERID);
                this.columnYEAR = new global::System.Data.DataColumn("YEAR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYEAR);
                this.columnSTINT = new global::System.Data.DataColumn("STINT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTINT);
                this.columnTEAMID = new global::System.Data.DataColumn("TEAMID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEAMID);
                this.columnPOSITION = new global::System.Data.DataColumn("POSITION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSITION);
                this.columnGAMESPLAYED = new global::System.Data.DataColumn("GAMESPLAYED", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAMESPLAYED);
                this.columnGOALS = new global::System.Data.DataColumn("GOALS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGOALS);
                this.columnASSISTS = new global::System.Data.DataColumn("ASSISTS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASSISTS);
                this.columnPENALTYMINUTES = new global::System.Data.DataColumn("PENALTYMINUTES", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPENALTYMINUTES);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPLAYERID,
                                this.columnYEAR,
                                this.columnSTINT,
                                this.columnTEAMID,
                                this.columnPOSITION}, true));
                this.columnPLAYERID.AllowDBNull = false;
                this.columnPLAYERID.MaxLength = 10;
                this.columnYEAR.AllowDBNull = false;
                this.columnSTINT.AllowDBNull = false;
                this.columnTEAMID.AllowDBNull = false;
                this.columnTEAMID.MaxLength = 3;
                this.columnPOSITION.AllowDBNull = false;
                this.columnPOSITION.MaxLength = 4;
                this.columnGAMESPLAYED.AllowDBNull = false;
                this.columnGOALS.AllowDBNull = false;
                this.columnASSISTS.AllowDBNull = false;
                this.columnPENALTYMINUTES.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCORINGRow NewSCORINGRow() {
                return ((SCORINGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SCORINGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SCORINGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SCORINGRowChanged != null)) {
                    this.SCORINGRowChanged(this, new SCORINGRowChangeEvent(((SCORINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SCORINGRowChanging != null)) {
                    this.SCORINGRowChanging(this, new SCORINGRowChangeEvent(((SCORINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SCORINGRowDeleted != null)) {
                    this.SCORINGRowDeleted(this, new SCORINGRowChangeEvent(((SCORINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SCORINGRowDeleting != null)) {
                    this.SCORINGRowDeleting(this, new SCORINGRowChangeEvent(((SCORINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSCORINGRow(SCORINGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                testDataSet ds = new testDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SCORINGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TEAMSDataTable : global::System.Data.TypedTableBase<TEAMSRow> {
            
            private global::System.Data.DataColumn columnYEAR;
            
            private global::System.Data.DataColumn columnTEAMID;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnCONFERENCEID;
            
            private global::System.Data.DataColumn columnDIVISIONID;
            
            private global::System.Data.DataColumn columnRANK;
            
            private global::System.Data.DataColumn columnPLAYOFF;
            
            private global::System.Data.DataColumn columnGAMES;
            
            private global::System.Data.DataColumn columnWINS;
            
            private global::System.Data.DataColumn columnLOSSES;
            
            private global::System.Data.DataColumn columnTIES;
            
            private global::System.Data.DataColumn columnOVERTIMELOSSES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TEAMSDataTable() {
                this.TableName = "TEAMS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TEAMSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TEAMSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YEARColumn {
                get {
                    return this.columnYEAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TEAMIDColumn {
                get {
                    return this.columnTEAMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONFERENCEIDColumn {
                get {
                    return this.columnCONFERENCEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIVISIONIDColumn {
                get {
                    return this.columnDIVISIONID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RANKColumn {
                get {
                    return this.columnRANK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PLAYOFFColumn {
                get {
                    return this.columnPLAYOFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GAMESColumn {
                get {
                    return this.columnGAMES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WINSColumn {
                get {
                    return this.columnWINS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOSSESColumn {
                get {
                    return this.columnLOSSES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIESColumn {
                get {
                    return this.columnTIES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OVERTIMELOSSESColumn {
                get {
                    return this.columnOVERTIMELOSSES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TEAMSRow this[int index] {
                get {
                    return ((TEAMSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TEAMSRowChangeEventHandler TEAMSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TEAMSRowChangeEventHandler TEAMSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TEAMSRowChangeEventHandler TEAMSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TEAMSRowChangeEventHandler TEAMSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTEAMSRow(TEAMSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TEAMSRow AddTEAMSRow(int YEAR, string TEAMID, string NAME, string CONFERENCEID, string DIVISIONID, int RANK, string PLAYOFF, int GAMES, int WINS, int LOSSES, int TIES, int OVERTIMELOSSES) {
                TEAMSRow rowTEAMSRow = ((TEAMSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        YEAR,
                        TEAMID,
                        NAME,
                        CONFERENCEID,
                        DIVISIONID,
                        RANK,
                        PLAYOFF,
                        GAMES,
                        WINS,
                        LOSSES,
                        TIES,
                        OVERTIMELOSSES};
                rowTEAMSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTEAMSRow);
                return rowTEAMSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TEAMSRow FindByYEARTEAMID(int YEAR, string TEAMID) {
                return ((TEAMSRow)(this.Rows.Find(new object[] {
                            YEAR,
                            TEAMID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TEAMSDataTable cln = ((TEAMSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TEAMSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnYEAR = base.Columns["YEAR"];
                this.columnTEAMID = base.Columns["TEAMID"];
                this.columnNAME = base.Columns["NAME"];
                this.columnCONFERENCEID = base.Columns["CONFERENCEID"];
                this.columnDIVISIONID = base.Columns["DIVISIONID"];
                this.columnRANK = base.Columns["RANK"];
                this.columnPLAYOFF = base.Columns["PLAYOFF"];
                this.columnGAMES = base.Columns["GAMES"];
                this.columnWINS = base.Columns["WINS"];
                this.columnLOSSES = base.Columns["LOSSES"];
                this.columnTIES = base.Columns["TIES"];
                this.columnOVERTIMELOSSES = base.Columns["OVERTIMELOSSES"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnYEAR = new global::System.Data.DataColumn("YEAR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYEAR);
                this.columnTEAMID = new global::System.Data.DataColumn("TEAMID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEAMID);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnCONFERENCEID = new global::System.Data.DataColumn("CONFERENCEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONFERENCEID);
                this.columnDIVISIONID = new global::System.Data.DataColumn("DIVISIONID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIVISIONID);
                this.columnRANK = new global::System.Data.DataColumn("RANK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRANK);
                this.columnPLAYOFF = new global::System.Data.DataColumn("PLAYOFF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLAYOFF);
                this.columnGAMES = new global::System.Data.DataColumn("GAMES", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAMES);
                this.columnWINS = new global::System.Data.DataColumn("WINS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWINS);
                this.columnLOSSES = new global::System.Data.DataColumn("LOSSES", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOSSES);
                this.columnTIES = new global::System.Data.DataColumn("TIES", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIES);
                this.columnOVERTIMELOSSES = new global::System.Data.DataColumn("OVERTIMELOSSES", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOVERTIMELOSSES);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnYEAR,
                                this.columnTEAMID}, true));
                this.columnYEAR.AllowDBNull = false;
                this.columnTEAMID.AllowDBNull = false;
                this.columnTEAMID.MaxLength = 3;
                this.columnNAME.AllowDBNull = false;
                this.columnNAME.MaxLength = 48;
                this.columnCONFERENCEID.AllowDBNull = false;
                this.columnCONFERENCEID.MaxLength = 2;
                this.columnDIVISIONID.AllowDBNull = false;
                this.columnDIVISIONID.MaxLength = 2;
                this.columnRANK.AllowDBNull = false;
                this.columnPLAYOFF.AllowDBNull = false;
                this.columnPLAYOFF.MaxLength = 6;
                this.columnGAMES.AllowDBNull = false;
                this.columnWINS.AllowDBNull = false;
                this.columnLOSSES.AllowDBNull = false;
                this.columnTIES.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TEAMSRow NewTEAMSRow() {
                return ((TEAMSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TEAMSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TEAMSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TEAMSRowChanged != null)) {
                    this.TEAMSRowChanged(this, new TEAMSRowChangeEvent(((TEAMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TEAMSRowChanging != null)) {
                    this.TEAMSRowChanging(this, new TEAMSRowChangeEvent(((TEAMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TEAMSRowDeleted != null)) {
                    this.TEAMSRowDeleted(this, new TEAMSRowChangeEvent(((TEAMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TEAMSRowDeleting != null)) {
                    this.TEAMSRowDeleting(this, new TEAMSRowChangeEvent(((TEAMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTEAMSRow(TEAMSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                testDataSet ds = new testDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TEAMSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PLAYERSRow : global::System.Data.DataRow {
            
            private PLAYERSDataTable tablePLAYERS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PLAYERSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePLAYERS = ((PLAYERSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PLAYERID {
                get {
                    return ((string)(this[this.tablePLAYERS.PLAYERIDColumn]));
                }
                set {
                    this[this.tablePLAYERS.PLAYERIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FIRSTNAME {
                get {
                    try {
                        return ((string)(this[this.tablePLAYERS.FIRSTNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIRSTNAME\' in table \'PLAYERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLAYERS.FIRSTNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LASTNAME {
                get {
                    try {
                        return ((string)(this[this.tablePLAYERS.LASTNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LASTNAME\' in table \'PLAYERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLAYERS.LASTNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int HEIGHT {
                get {
                    try {
                        return ((int)(this[this.tablePLAYERS.HEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HEIGHT\' in table \'PLAYERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLAYERS.HEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WEIGHT {
                get {
                    try {
                        return ((int)(this[this.tablePLAYERS.WEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WEIGHT\' in table \'PLAYERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLAYERS.WEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FIRSTNHL {
                get {
                    return ((int)(this[this.tablePLAYERS.FIRSTNHLColumn]));
                }
                set {
                    this[this.tablePLAYERS.FIRSTNHLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LASTNHL {
                get {
                    return ((int)(this[this.tablePLAYERS.LASTNHLColumn]));
                }
                set {
                    this[this.tablePLAYERS.LASTNHLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string POSITION {
                get {
                    try {
                        return ((string)(this[this.tablePLAYERS.POSITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POSITION\' in table \'PLAYERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLAYERS.POSITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BIRTHYEAR {
                get {
                    try {
                        return ((int)(this[this.tablePLAYERS.BIRTHYEARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIRTHYEAR\' in table \'PLAYERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLAYERS.BIRTHYEARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BIRTHMON {
                get {
                    try {
                        return ((int)(this[this.tablePLAYERS.BIRTHMONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIRTHMON\' in table \'PLAYERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLAYERS.BIRTHMONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BIRTHDAY {
                get {
                    try {
                        return ((int)(this[this.tablePLAYERS.BIRTHDAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIRTHDAY\' in table \'PLAYERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLAYERS.BIRTHDAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BIRTHCOUNTRY {
                get {
                    try {
                        return ((string)(this[this.tablePLAYERS.BIRTHCOUNTRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIRTHCOUNTRY\' in table \'PLAYERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLAYERS.BIRTHCOUNTRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BIRTHSTATE {
                get {
                    try {
                        return ((string)(this[this.tablePLAYERS.BIRTHSTATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIRTHSTATE\' in table \'PLAYERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLAYERS.BIRTHSTATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BIRTHCITY {
                get {
                    try {
                        return ((string)(this[this.tablePLAYERS.BIRTHCITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIRTHCITY\' in table \'PLAYERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLAYERS.BIRTHCITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFIRSTNAMENull() {
                return this.IsNull(this.tablePLAYERS.FIRSTNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFIRSTNAMENull() {
                this[this.tablePLAYERS.FIRSTNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLASTNAMENull() {
                return this.IsNull(this.tablePLAYERS.LASTNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLASTNAMENull() {
                this[this.tablePLAYERS.LASTNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHEIGHTNull() {
                return this.IsNull(this.tablePLAYERS.HEIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHEIGHTNull() {
                this[this.tablePLAYERS.HEIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWEIGHTNull() {
                return this.IsNull(this.tablePLAYERS.WEIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWEIGHTNull() {
                this[this.tablePLAYERS.WEIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPOSITIONNull() {
                return this.IsNull(this.tablePLAYERS.POSITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPOSITIONNull() {
                this[this.tablePLAYERS.POSITIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBIRTHYEARNull() {
                return this.IsNull(this.tablePLAYERS.BIRTHYEARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBIRTHYEARNull() {
                this[this.tablePLAYERS.BIRTHYEARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBIRTHMONNull() {
                return this.IsNull(this.tablePLAYERS.BIRTHMONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBIRTHMONNull() {
                this[this.tablePLAYERS.BIRTHMONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBIRTHDAYNull() {
                return this.IsNull(this.tablePLAYERS.BIRTHDAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBIRTHDAYNull() {
                this[this.tablePLAYERS.BIRTHDAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBIRTHCOUNTRYNull() {
                return this.IsNull(this.tablePLAYERS.BIRTHCOUNTRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBIRTHCOUNTRYNull() {
                this[this.tablePLAYERS.BIRTHCOUNTRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBIRTHSTATENull() {
                return this.IsNull(this.tablePLAYERS.BIRTHSTATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBIRTHSTATENull() {
                this[this.tablePLAYERS.BIRTHSTATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBIRTHCITYNull() {
                return this.IsNull(this.tablePLAYERS.BIRTHCITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBIRTHCITYNull() {
                this[this.tablePLAYERS.BIRTHCITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCORINGRow[] GetSCORINGRows() {
                if ((this.Table.ChildRelations["PLAYERS_SCORING"] == null)) {
                    return new SCORINGRow[0];
                }
                else {
                    return ((SCORINGRow[])(base.GetChildRows(this.Table.ChildRelations["PLAYERS_SCORING"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SCORINGRow : global::System.Data.DataRow {
            
            private SCORINGDataTable tableSCORING;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SCORINGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSCORING = ((SCORINGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PLAYERID {
                get {
                    return ((string)(this[this.tableSCORING.PLAYERIDColumn]));
                }
                set {
                    this[this.tableSCORING.PLAYERIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int YEAR {
                get {
                    return ((int)(this[this.tableSCORING.YEARColumn]));
                }
                set {
                    this[this.tableSCORING.YEARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int STINT {
                get {
                    return ((int)(this[this.tableSCORING.STINTColumn]));
                }
                set {
                    this[this.tableSCORING.STINTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TEAMID {
                get {
                    return ((string)(this[this.tableSCORING.TEAMIDColumn]));
                }
                set {
                    this[this.tableSCORING.TEAMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string POSITION {
                get {
                    return ((string)(this[this.tableSCORING.POSITIONColumn]));
                }
                set {
                    this[this.tableSCORING.POSITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GAMESPLAYED {
                get {
                    return ((int)(this[this.tableSCORING.GAMESPLAYEDColumn]));
                }
                set {
                    this[this.tableSCORING.GAMESPLAYEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GOALS {
                get {
                    return ((int)(this[this.tableSCORING.GOALSColumn]));
                }
                set {
                    this[this.tableSCORING.GOALSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ASSISTS {
                get {
                    return ((int)(this[this.tableSCORING.ASSISTSColumn]));
                }
                set {
                    this[this.tableSCORING.ASSISTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PENALTYMINUTES {
                get {
                    return ((int)(this[this.tableSCORING.PENALTYMINUTESColumn]));
                }
                set {
                    this[this.tableSCORING.PENALTYMINUTESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLAYERSRow PLAYERSRow {
                get {
                    return ((PLAYERSRow)(this.GetParentRow(this.Table.ParentRelations["PLAYERS_SCORING"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PLAYERS_SCORING"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TEAMSRow TEAMSRowParent {
                get {
                    return ((TEAMSRow)(this.GetParentRow(this.Table.ParentRelations["TEAMS_SCORING"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["TEAMS_SCORING"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TEAMSRow : global::System.Data.DataRow {
            
            private TEAMSDataTable tableTEAMS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TEAMSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTEAMS = ((TEAMSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int YEAR {
                get {
                    return ((int)(this[this.tableTEAMS.YEARColumn]));
                }
                set {
                    this[this.tableTEAMS.YEARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TEAMID {
                get {
                    return ((string)(this[this.tableTEAMS.TEAMIDColumn]));
                }
                set {
                    this[this.tableTEAMS.TEAMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NAME {
                get {
                    return ((string)(this[this.tableTEAMS.NAMEColumn]));
                }
                set {
                    this[this.tableTEAMS.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CONFERENCEID {
                get {
                    return ((string)(this[this.tableTEAMS.CONFERENCEIDColumn]));
                }
                set {
                    this[this.tableTEAMS.CONFERENCEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DIVISIONID {
                get {
                    return ((string)(this[this.tableTEAMS.DIVISIONIDColumn]));
                }
                set {
                    this[this.tableTEAMS.DIVISIONIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RANK {
                get {
                    return ((int)(this[this.tableTEAMS.RANKColumn]));
                }
                set {
                    this[this.tableTEAMS.RANKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PLAYOFF {
                get {
                    return ((string)(this[this.tableTEAMS.PLAYOFFColumn]));
                }
                set {
                    this[this.tableTEAMS.PLAYOFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GAMES {
                get {
                    return ((int)(this[this.tableTEAMS.GAMESColumn]));
                }
                set {
                    this[this.tableTEAMS.GAMESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WINS {
                get {
                    return ((int)(this[this.tableTEAMS.WINSColumn]));
                }
                set {
                    this[this.tableTEAMS.WINSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LOSSES {
                get {
                    return ((int)(this[this.tableTEAMS.LOSSESColumn]));
                }
                set {
                    this[this.tableTEAMS.LOSSESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TIES {
                get {
                    return ((int)(this[this.tableTEAMS.TIESColumn]));
                }
                set {
                    this[this.tableTEAMS.TIESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OVERTIMELOSSES {
                get {
                    try {
                        return ((int)(this[this.tableTEAMS.OVERTIMELOSSESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OVERTIMELOSSES\' in table \'TEAMS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEAMS.OVERTIMELOSSESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOVERTIMELOSSESNull() {
                return this.IsNull(this.tableTEAMS.OVERTIMELOSSESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOVERTIMELOSSESNull() {
                this[this.tableTEAMS.OVERTIMELOSSESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCORINGRow[] GetSCORINGRows() {
                if ((this.Table.ChildRelations["TEAMS_SCORING"] == null)) {
                    return new SCORINGRow[0];
                }
                else {
                    return ((SCORINGRow[])(base.GetChildRows(this.Table.ChildRelations["TEAMS_SCORING"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PLAYERSRowChangeEvent : global::System.EventArgs {
            
            private PLAYERSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLAYERSRowChangeEvent(PLAYERSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLAYERSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SCORINGRowChangeEvent : global::System.EventArgs {
            
            private SCORINGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCORINGRowChangeEvent(SCORINGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SCORINGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TEAMSRowChangeEvent : global::System.EventArgs {
            
            private TEAMSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TEAMSRowChangeEvent(TEAMSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TEAMSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace WindowsFormsSample.testDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PLAYERSTableAdapter : global::System.ComponentModel.Component {
        
        private global::NuoDb.Data.Client.NuoDbDataAdapter _adapter;
        
        private global::NuoDb.Data.Client.NuoDbConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::NuoDb.Data.Client.NuoDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PLAYERSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::NuoDb.Data.Client.NuoDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::NuoDb.Data.Client.NuoDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::NuoDb.Data.Client.NuoDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::NuoDb.Data.Client.NuoDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::NuoDb.Data.Client.NuoDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PLAYERS";
            tableMapping.ColumnMappings.Add("PLAYERID", "PLAYERID");
            tableMapping.ColumnMappings.Add("FIRSTNAME", "FIRSTNAME");
            tableMapping.ColumnMappings.Add("LASTNAME", "LASTNAME");
            tableMapping.ColumnMappings.Add("HEIGHT", "HEIGHT");
            tableMapping.ColumnMappings.Add("WEIGHT", "WEIGHT");
            tableMapping.ColumnMappings.Add("FIRSTNHL", "FIRSTNHL");
            tableMapping.ColumnMappings.Add("LASTNHL", "LASTNHL");
            tableMapping.ColumnMappings.Add("POSITION", "POSITION");
            tableMapping.ColumnMappings.Add("BIRTHYEAR", "BIRTHYEAR");
            tableMapping.ColumnMappings.Add("BIRTHMON", "BIRTHMON");
            tableMapping.ColumnMappings.Add("BIRTHDAY", "BIRTHDAY");
            tableMapping.ColumnMappings.Add("BIRTHCOUNTRY", "BIRTHCOUNTRY");
            tableMapping.ColumnMappings.Add("BIRTHSTATE", "BIRTHSTATE");
            tableMapping.ColumnMappings.Add("BIRTHCITY", "BIRTHCITY");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::NuoDb.Data.Client.NuoDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""HOCKEY"".""PLAYERS"" WHERE ((""PLAYERID"" = ?) AND ((? = 1 AND ""FIRSTNAME"" IS NULL) OR (""FIRSTNAME"" = ?)) AND ((? = 1 AND ""LASTNAME"" IS NULL) OR (""LASTNAME"" = ?)) AND ((? = 1 AND ""HEIGHT"" IS NULL) OR (""HEIGHT"" = ?)) AND ((? = 1 AND ""WEIGHT"" IS NULL) OR (""WEIGHT"" = ?)) AND (""FIRSTNHL"" = ?) AND (""LASTNHL"" = ?) AND ((? = 1 AND ""POSITION"" IS NULL) OR (""POSITION"" = ?)) AND ((? = 1 AND ""BIRTHYEAR"" IS NULL) OR (""BIRTHYEAR"" = ?)) AND ((? = 1 AND ""BIRTHMON"" IS NULL) OR (""BIRTHMON"" = ?)) AND ((? = 1 AND ""BIRTHDAY"" IS NULL) OR (""BIRTHDAY"" = ?)) AND ((? = 1 AND ""BIRTHCOUNTRY"" IS NULL) OR (""BIRTHCOUNTRY"" = ?)) AND ((? = 1 AND ""BIRTHSTATE"" IS NULL) OR (""BIRTHSTATE"" = ?)) AND ((? = 1 AND ""BIRTHCITY"" IS NULL) OR (""BIRTHCITY"" = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::NuoDb.Data.Client.NuoDbParameter param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PLAYERID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?1";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?2";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?3";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "LASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?4";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "LASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?5";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "HEIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?6";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "HEIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?7";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "WEIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?8";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "WEIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?9";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNHL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?10";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "LASTNHL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?11";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "POSITION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?12";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "POSITION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?13";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHYEAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?14";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHYEAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?15";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHMON";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?16";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHMON";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?17";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHDAY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?18";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHDAY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?19";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHCOUNTRY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?20";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHCOUNTRY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?21";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHSTATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?22";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHSTATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?23";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHCITY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?24";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHCITY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::NuoDb.Data.Client.NuoDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"HOCKEY\".\"PLAYERS\" (\"PLAYERID\", \"FIRSTNAME\", \"LASTNAME\", \"HEIGHT\", \"W" +
                "EIGHT\", \"FIRSTNHL\", \"LASTNHL\", \"POSITION\", \"BIRTHYEAR\", \"BIRTHMON\", \"BIRTHDAY\", " +
                "\"BIRTHCOUNTRY\", \"BIRTHSTATE\", \"BIRTHCITY\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?," +
                " ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PLAYERID";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?1";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?2";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "LASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?3";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "HEIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?4";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "WEIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?5";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNHL";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?6";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "LASTNHL";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?7";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "POSITION";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?8";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHYEAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?9";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHMON";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?10";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHDAY";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?11";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHCOUNTRY";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?12";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHSTATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?13";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHCITY";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::NuoDb.Data.Client.NuoDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""HOCKEY"".""PLAYERS"" SET ""PLAYERID"" = ?, ""FIRSTNAME"" = ?, ""LASTNAME"" = ?, ""HEIGHT"" = ?, ""WEIGHT"" = ?, ""FIRSTNHL"" = ?, ""LASTNHL"" = ?, ""POSITION"" = ?, ""BIRTHYEAR"" = ?, ""BIRTHMON"" = ?, ""BIRTHDAY"" = ?, ""BIRTHCOUNTRY"" = ?, ""BIRTHSTATE"" = ?, ""BIRTHCITY"" = ? WHERE ((""PLAYERID"" = ?) AND ((? = 1 AND ""FIRSTNAME"" IS NULL) OR (""FIRSTNAME"" = ?)) AND ((? = 1 AND ""LASTNAME"" IS NULL) OR (""LASTNAME"" = ?)) AND ((? = 1 AND ""HEIGHT"" IS NULL) OR (""HEIGHT"" = ?)) AND ((? = 1 AND ""WEIGHT"" IS NULL) OR (""WEIGHT"" = ?)) AND (""FIRSTNHL"" = ?) AND (""LASTNHL"" = ?) AND ((? = 1 AND ""POSITION"" IS NULL) OR (""POSITION"" = ?)) AND ((? = 1 AND ""BIRTHYEAR"" IS NULL) OR (""BIRTHYEAR"" = ?)) AND ((? = 1 AND ""BIRTHMON"" IS NULL) OR (""BIRTHMON"" = ?)) AND ((? = 1 AND ""BIRTHDAY"" IS NULL) OR (""BIRTHDAY"" = ?)) AND ((? = 1 AND ""BIRTHCOUNTRY"" IS NULL) OR (""BIRTHCOUNTRY"" = ?)) AND ((? = 1 AND ""BIRTHSTATE"" IS NULL) OR (""BIRTHSTATE"" = ?)) AND ((? = 1 AND ""BIRTHCITY"" IS NULL) OR (""BIRTHCITY"" = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PLAYERID";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?1";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?2";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "LASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?3";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "HEIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?4";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "WEIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?5";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNHL";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?6";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "LASTNHL";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?7";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "POSITION";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?8";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHYEAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?9";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHMON";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?10";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHDAY";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?11";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHCOUNTRY";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?12";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHSTATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?13";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHCITY";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?14";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PLAYERID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?15";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?16";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?17";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "LASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?18";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "LASTNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?19";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "HEIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?20";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "HEIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?21";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "WEIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?22";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "WEIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?23";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "FIRSTNHL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?24";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "LASTNHL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?25";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "POSITION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?26";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "POSITION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?27";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHYEAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?28";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHYEAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?29";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHMON";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?30";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHMON";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?31";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHDAY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?32";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHDAY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?33";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHCOUNTRY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?34";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHCOUNTRY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?35";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHSTATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?36";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHSTATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?37";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHCITY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?38";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = "BIRTHCITY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::NuoDb.Data.Client.NuoDbConnection();
            this._connection.ConnectionString = global::WindowsFormsSample.Properties.Settings.Default.NuoDBQuickstart;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::NuoDb.Data.Client.NuoDbCommand[1];
            this._commandCollection[0] = new global::NuoDb.Data.Client.NuoDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"PLAYERID\", \"FIRSTNAME\", \"LASTNAME\", \"HEIGHT\", \"WEIGHT\", \"FIRSTNHL\", \"LAST" +
                "NHL\", \"POSITION\", \"BIRTHYEAR\", \"BIRTHMON\", \"BIRTHDAY\", \"BIRTHCOUNTRY\", \"BIRTHSTA" +
                "TE\", \"BIRTHCITY\" FROM \"HOCKEY\".\"PLAYERS\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(testDataSet.PLAYERSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual testDataSet.PLAYERSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            testDataSet.PLAYERSDataTable dataTable = new testDataSet.PLAYERSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(testDataSet.PLAYERSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(testDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PLAYERS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string __, string @__2, string @__4, global::System.Nullable<int> @__6, global::System.Nullable<int> @__8, int @__9, int @__10, string @__12, global::System.Nullable<int> @__14, global::System.Nullable<int> @__16, global::System.Nullable<int> @__18, string @__20, string @__22, string @__24) {
            if ((__ == null)) {
                throw new global::System.ArgumentNullException("__");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(__));
            }
            if ((@__2 == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(@__2));
            }
            if ((@__4 == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(@__4));
            }
            if ((@__6.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(@__6.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((@__8.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(@__8.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(@__9));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(@__10));
            if ((@__12 == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(@__12));
            }
            if ((@__14.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(@__14.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((@__16.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(@__16.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((@__18.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(@__18.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((@__20 == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(@__20));
            }
            if ((@__22 == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(@__22));
            }
            if ((@__24 == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(@__24));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string __, string @__1, string @__2, global::System.Nullable<int> @__3, global::System.Nullable<int> @__4, int @__5, int @__6, string @__7, global::System.Nullable<int> @__8, global::System.Nullable<int> @__9, global::System.Nullable<int> @__10, string @__11, string @__12, string @__13) {
            if ((__ == null)) {
                throw new global::System.ArgumentNullException("__");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(__));
            }
            if ((@__1 == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(@__1));
            }
            if ((@__2 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(@__2));
            }
            if ((@__3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(@__3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((@__4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(@__4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(@__5));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(@__6));
            if ((@__7 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(@__7));
            }
            if ((@__8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(@__8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((@__9.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(@__9.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((@__10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(@__10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((@__11 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(@__11));
            }
            if ((@__12 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(@__12));
            }
            if ((@__13 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(@__13));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string __, 
                    string @__1, 
                    string @__2, 
                    global::System.Nullable<int> @__3, 
                    global::System.Nullable<int> @__4, 
                    int @__5, 
                    int @__6, 
                    string @__7, 
                    global::System.Nullable<int> @__8, 
                    global::System.Nullable<int> @__9, 
                    global::System.Nullable<int> @__10, 
                    string @__11, 
                    string @__12, 
                    string @__13, 
                    string @__14, 
                    string @__16, 
                    string @__18, 
                    global::System.Nullable<int> @__20, 
                    global::System.Nullable<int> @__22, 
                    int @__23, 
                    int @__24, 
                    string @__26, 
                    global::System.Nullable<int> @__28, 
                    global::System.Nullable<int> @__30, 
                    global::System.Nullable<int> @__32, 
                    string @__34, 
                    string @__36, 
                    string @__38) {
            if ((__ == null)) {
                throw new global::System.ArgumentNullException("__");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(__));
            }
            if ((@__1 == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(@__1));
            }
            if ((@__2 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(@__2));
            }
            if ((@__3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(@__3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((@__4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(@__4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(@__5));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(@__6));
            if ((@__7 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(@__7));
            }
            if ((@__8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(@__8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((@__9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(@__9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((@__10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(@__10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((@__11 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(@__11));
            }
            if ((@__12 == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(@__12));
            }
            if ((@__13 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(@__13));
            }
            if ((@__14 == null)) {
                throw new global::System.ArgumentNullException("__14");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(@__14));
            }
            if ((@__16 == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(@__16));
            }
            if ((@__18 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(@__18));
            }
            if ((@__20.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(@__20.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((@__22.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(@__22.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(@__23));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(@__24));
            if ((@__26 == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(@__26));
            }
            if ((@__28.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(@__28.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((@__30.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(@__30.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((@__32.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(@__32.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((@__34 == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(@__34));
            }
            if ((@__36 == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(@__36));
            }
            if ((@__38 == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(@__38));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string @__1, 
                    string @__2, 
                    global::System.Nullable<int> @__3, 
                    global::System.Nullable<int> @__4, 
                    int @__5, 
                    int @__6, 
                    string @__7, 
                    global::System.Nullable<int> @__8, 
                    global::System.Nullable<int> @__9, 
                    global::System.Nullable<int> @__10, 
                    string @__11, 
                    string @__12, 
                    string @__13, 
                    string @__14, 
                    string @__16, 
                    string @__18, 
                    global::System.Nullable<int> @__20, 
                    global::System.Nullable<int> @__22, 
                    int @__23, 
                    int @__24, 
                    string @__26, 
                    global::System.Nullable<int> @__28, 
                    global::System.Nullable<int> @__30, 
                    global::System.Nullable<int> @__32, 
                    string @__34, 
                    string @__36, 
                    string @__38) {
            return this.Update(@__14, @__1, @__2, @__3, @__4, @__5, @__6, @__7, @__8, @__9, @__10, @__11, @__12, @__13, @__14, @__16, @__18, @__20, @__22, @__23, @__24, @__26, @__28, @__30, @__32, @__34, @__36, @__38);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SCORINGTableAdapter : global::System.ComponentModel.Component {
        
        private global::NuoDb.Data.Client.NuoDbDataAdapter _adapter;
        
        private global::NuoDb.Data.Client.NuoDbConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::NuoDb.Data.Client.NuoDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SCORINGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::NuoDb.Data.Client.NuoDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::NuoDb.Data.Client.NuoDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::NuoDb.Data.Client.NuoDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::NuoDb.Data.Client.NuoDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::NuoDb.Data.Client.NuoDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SCORING";
            tableMapping.ColumnMappings.Add("PLAYERID", "PLAYERID");
            tableMapping.ColumnMappings.Add("YEAR", "YEAR");
            tableMapping.ColumnMappings.Add("STINT", "STINT");
            tableMapping.ColumnMappings.Add("TEAMID", "TEAMID");
            tableMapping.ColumnMappings.Add("POSITION", "POSITION");
            tableMapping.ColumnMappings.Add("GAMESPLAYED", "GAMESPLAYED");
            tableMapping.ColumnMappings.Add("GOALS", "GOALS");
            tableMapping.ColumnMappings.Add("ASSISTS", "ASSISTS");
            tableMapping.ColumnMappings.Add("PENALTYMINUTES", "PENALTYMINUTES");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::NuoDb.Data.Client.NuoDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"HOCKEY\".\"SCORING\" WHERE ((\"PLAYERID\" = ?) AND (\"YEAR\" = ?) AND (\"STI" +
                "NT\" = ?) AND (\"TEAMID\" = ?) AND (\"POSITION\" = ?) AND (\"GAMESPLAYED\" = ?) AND (\"G" +
                "OALS\" = ?) AND (\"ASSISTS\" = ?) AND (\"PENALTYMINUTES\" = ?))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::NuoDb.Data.Client.NuoDbParameter param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PLAYERID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?1";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "YEAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?2";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "STINT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?3";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "TEAMID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?4";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "POSITION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?5";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "GAMESPLAYED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?6";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "GOALS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?7";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "ASSISTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?8";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "PENALTYMINUTES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::NuoDb.Data.Client.NuoDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"HOCKEY\".\"SCORING\" (\"PLAYERID\", \"YEAR\", \"STINT\", \"TEAMID\", \"POSITION\"" +
                ", \"GAMESPLAYED\", \"GOALS\", \"ASSISTS\", \"PENALTYMINUTES\") VALUES (?, ?, ?, ?, ?, ?," +
                " ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PLAYERID";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?1";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "YEAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?2";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "STINT";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?3";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "TEAMID";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?4";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "POSITION";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?5";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "GAMESPLAYED";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?6";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "GOALS";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?7";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "ASSISTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?8";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "PENALTYMINUTES";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::NuoDb.Data.Client.NuoDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""HOCKEY"".""SCORING"" SET ""PLAYERID"" = ?, ""YEAR"" = ?, ""STINT"" = ?, ""TEAMID"" = ?, ""POSITION"" = ?, ""GAMESPLAYED"" = ?, ""GOALS"" = ?, ""ASSISTS"" = ?, ""PENALTYMINUTES"" = ? WHERE ((""PLAYERID"" = ?) AND (""YEAR"" = ?) AND (""STINT"" = ?) AND (""TEAMID"" = ?) AND (""POSITION"" = ?) AND (""GAMESPLAYED"" = ?) AND (""GOALS"" = ?) AND (""ASSISTS"" = ?) AND (""PENALTYMINUTES"" = ?))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PLAYERID";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?1";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "YEAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?2";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "STINT";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?3";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "TEAMID";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?4";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "POSITION";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?5";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "GAMESPLAYED";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?6";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "GOALS";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?7";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "ASSISTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?8";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "PENALTYMINUTES";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?9";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PLAYERID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?10";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "YEAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?11";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "STINT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?12";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "TEAMID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?13";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "POSITION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?14";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "GAMESPLAYED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?15";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "GOALS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?16";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "ASSISTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?17";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "PENALTYMINUTES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::NuoDb.Data.Client.NuoDbConnection();
            this._connection.ConnectionString = global::WindowsFormsSample.Properties.Settings.Default.NuoDBQuickstart;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::NuoDb.Data.Client.NuoDbCommand[1];
            this._commandCollection[0] = new global::NuoDb.Data.Client.NuoDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"PLAYERID\", \"YEAR\", \"STINT\", \"TEAMID\", \"POSITION\", \"GAMESPLAYED\", \"GOALS\"," +
                " \"ASSISTS\", \"PENALTYMINUTES\" FROM \"HOCKEY\".\"SCORING\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(testDataSet.SCORINGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual testDataSet.SCORINGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            testDataSet.SCORINGDataTable dataTable = new testDataSet.SCORINGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(testDataSet.SCORINGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(testDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SCORING");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string __, int @__1, int @__2, string @__3, string @__4, int @__5, int @__6, int @__7, int @__8) {
            if ((__ == null)) {
                throw new global::System.ArgumentNullException("__");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(__));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(@__1));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(@__2));
            if ((@__3 == null)) {
                throw new global::System.ArgumentNullException("__3");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(@__3));
            }
            if ((@__4 == null)) {
                throw new global::System.ArgumentNullException("__4");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(@__4));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(@__5));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(@__6));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(@__7));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(@__8));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string __, int @__1, int @__2, string @__3, string @__4, int @__5, int @__6, int @__7, int @__8) {
            if ((__ == null)) {
                throw new global::System.ArgumentNullException("__");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(__));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(@__1));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(@__2));
            if ((@__3 == null)) {
                throw new global::System.ArgumentNullException("__3");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(@__3));
            }
            if ((@__4 == null)) {
                throw new global::System.ArgumentNullException("__4");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(@__4));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(@__5));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(@__6));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(@__7));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(@__8));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string __, 
                    int @__1, 
                    int @__2, 
                    string @__3, 
                    string @__4, 
                    int @__5, 
                    int @__6, 
                    int @__7, 
                    int @__8, 
                    string @__9, 
                    int @__10, 
                    int @__11, 
                    string @__12, 
                    string @__13, 
                    int @__14, 
                    int @__15, 
                    int @__16, 
                    int @__17) {
            if ((__ == null)) {
                throw new global::System.ArgumentNullException("__");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(__));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(@__1));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(@__2));
            if ((@__3 == null)) {
                throw new global::System.ArgumentNullException("__3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(@__3));
            }
            if ((@__4 == null)) {
                throw new global::System.ArgumentNullException("__4");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(@__4));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(@__5));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(@__6));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(@__7));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(@__8));
            if ((@__9 == null)) {
                throw new global::System.ArgumentNullException("__9");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(@__9));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(@__10));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(@__11));
            if ((@__12 == null)) {
                throw new global::System.ArgumentNullException("__12");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(@__12));
            }
            if ((@__13 == null)) {
                throw new global::System.ArgumentNullException("__13");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(@__13));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(@__14));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(@__15));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(@__16));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(@__17));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int @__5, int @__6, int @__7, int @__8, string @__9, int @__10, int @__11, string @__12, string @__13, int @__14, int @__15, int @__16, int @__17) {
            return this.Update(@__9, @__10, @__11, @__12, @__13, @__5, @__6, @__7, @__8, @__9, @__10, @__11, @__12, @__13, @__14, @__15, @__16, @__17);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TEAMSTableAdapter : global::System.ComponentModel.Component {
        
        private global::NuoDb.Data.Client.NuoDbDataAdapter _adapter;
        
        private global::NuoDb.Data.Client.NuoDbConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::NuoDb.Data.Client.NuoDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TEAMSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::NuoDb.Data.Client.NuoDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::NuoDb.Data.Client.NuoDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::NuoDb.Data.Client.NuoDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::NuoDb.Data.Client.NuoDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::NuoDb.Data.Client.NuoDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TEAMS";
            tableMapping.ColumnMappings.Add("YEAR", "YEAR");
            tableMapping.ColumnMappings.Add("TEAMID", "TEAMID");
            tableMapping.ColumnMappings.Add("NAME", "NAME");
            tableMapping.ColumnMappings.Add("CONFERENCEID", "CONFERENCEID");
            tableMapping.ColumnMappings.Add("DIVISIONID", "DIVISIONID");
            tableMapping.ColumnMappings.Add("RANK", "RANK");
            tableMapping.ColumnMappings.Add("PLAYOFF", "PLAYOFF");
            tableMapping.ColumnMappings.Add("GAMES", "GAMES");
            tableMapping.ColumnMappings.Add("WINS", "WINS");
            tableMapping.ColumnMappings.Add("LOSSES", "LOSSES");
            tableMapping.ColumnMappings.Add("TIES", "TIES");
            tableMapping.ColumnMappings.Add("OVERTIMELOSSES", "OVERTIMELOSSES");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::NuoDb.Data.Client.NuoDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""HOCKEY"".""TEAMS"" WHERE ((""YEAR"" = ?) AND (""TEAMID"" = ?) AND (""NAME"" = ?) AND (""CONFERENCEID"" = ?) AND (""DIVISIONID"" = ?) AND (""RANK"" = ?) AND (""PLAYOFF"" = ?) AND (""GAMES"" = ?) AND (""WINS"" = ?) AND (""LOSSES"" = ?) AND (""TIES"" = ?) AND ((? = 1 AND ""OVERTIMELOSSES"" IS NULL) OR (""OVERTIMELOSSES"" = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::NuoDb.Data.Client.NuoDbParameter param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "YEAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?1";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "TEAMID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?2";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 48;
            param.IsNullable = true;
            param.SourceColumn = "NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?3";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "CONFERENCEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?4";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DIVISIONID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?5";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "RANK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?6";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 6;
            param.IsNullable = true;
            param.SourceColumn = "PLAYOFF";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?7";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "GAMES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?8";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "WINS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?9";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "LOSSES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?10";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "TIES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?11";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "OVERTIMELOSSES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?12";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "OVERTIMELOSSES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::NuoDb.Data.Client.NuoDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"HOCKEY\".\"TEAMS\" (\"YEAR\", \"TEAMID\", \"NAME\", \"CONFERENCEID\", \"DIVISION" +
                "ID\", \"RANK\", \"PLAYOFF\", \"GAMES\", \"WINS\", \"LOSSES\", \"TIES\", \"OVERTIMELOSSES\") VAL" +
                "UES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "YEAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?1";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "TEAMID";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?2";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 48;
            param.IsNullable = true;
            param.SourceColumn = "NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?3";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "CONFERENCEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?4";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DIVISIONID";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?5";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "RANK";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?6";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 6;
            param.IsNullable = true;
            param.SourceColumn = "PLAYOFF";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?7";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "GAMES";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?8";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "WINS";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?9";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "LOSSES";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?10";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "TIES";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?11";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "OVERTIMELOSSES";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::NuoDb.Data.Client.NuoDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""HOCKEY"".""TEAMS"" SET ""YEAR"" = ?, ""TEAMID"" = ?, ""NAME"" = ?, ""CONFERENCEID"" = ?, ""DIVISIONID"" = ?, ""RANK"" = ?, ""PLAYOFF"" = ?, ""GAMES"" = ?, ""WINS"" = ?, ""LOSSES"" = ?, ""TIES"" = ?, ""OVERTIMELOSSES"" = ? WHERE ((""YEAR"" = ?) AND (""TEAMID"" = ?) AND (""NAME"" = ?) AND (""CONFERENCEID"" = ?) AND (""DIVISIONID"" = ?) AND (""RANK"" = ?) AND (""PLAYOFF"" = ?) AND (""GAMES"" = ?) AND (""WINS"" = ?) AND (""LOSSES"" = ?) AND (""TIES"" = ?) AND ((? = 1 AND ""OVERTIMELOSSES"" IS NULL) OR (""OVERTIMELOSSES"" = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "YEAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?1";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "TEAMID";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?2";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 48;
            param.IsNullable = true;
            param.SourceColumn = "NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?3";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "CONFERENCEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?4";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DIVISIONID";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?5";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "RANK";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?6";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 6;
            param.IsNullable = true;
            param.SourceColumn = "PLAYOFF";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?7";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "GAMES";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?8";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "WINS";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?9";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "LOSSES";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?10";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "TIES";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?11";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "OVERTIMELOSSES";
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?12";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "YEAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?13";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "TEAMID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?14";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 48;
            param.IsNullable = true;
            param.SourceColumn = "NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?15";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "CONFERENCEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?16";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DIVISIONID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?17";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "RANK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?18";
            param.DbType = global::System.Data.DbType.String;
            param.Size = 6;
            param.IsNullable = true;
            param.SourceColumn = "PLAYOFF";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?19";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "GAMES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?20";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "WINS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?21";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "LOSSES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?22";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "TIES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?23";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "OVERTIMELOSSES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::NuoDb.Data.Client.NuoDbParameter();
            param.ParameterName = "?24";
            param.DbType = global::System.Data.DbType.Int32;
            param.Size = 11;
            param.IsNullable = true;
            param.SourceColumn = "OVERTIMELOSSES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::NuoDb.Data.Client.NuoDbConnection();
            this._connection.ConnectionString = global::WindowsFormsSample.Properties.Settings.Default.NuoDBQuickstart;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::NuoDb.Data.Client.NuoDbCommand[1];
            this._commandCollection[0] = new global::NuoDb.Data.Client.NuoDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"YEAR\", \"TEAMID\", \"NAME\", \"CONFERENCEID\", \"DIVISIONID\", \"RANK\", \"PLAYOFF\"," +
                " \"GAMES\", \"WINS\", \"LOSSES\", \"TIES\", \"OVERTIMELOSSES\" FROM \"HOCKEY\".\"TEAMS\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(testDataSet.TEAMSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual testDataSet.TEAMSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            testDataSet.TEAMSDataTable dataTable = new testDataSet.TEAMSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(testDataSet.TEAMSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(testDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TEAMS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int __, string @__1, string @__2, string @__3, string @__4, int @__5, string @__6, int @__7, int @__8, int @__9, int @__10, global::System.Nullable<int> @__12) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(__));
            if ((@__1 == null)) {
                throw new global::System.ArgumentNullException("__1");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(@__1));
            }
            if ((@__2 == null)) {
                throw new global::System.ArgumentNullException("__2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(@__2));
            }
            if ((@__3 == null)) {
                throw new global::System.ArgumentNullException("__3");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(@__3));
            }
            if ((@__4 == null)) {
                throw new global::System.ArgumentNullException("__4");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(@__4));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(@__5));
            if ((@__6 == null)) {
                throw new global::System.ArgumentNullException("__6");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(@__6));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(@__7));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(@__8));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(@__9));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(@__10));
            if ((@__12.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(@__12.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int __, string @__1, string @__2, string @__3, string @__4, int @__5, string @__6, int @__7, int @__8, int @__9, int @__10, global::System.Nullable<int> @__11) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(__));
            if ((@__1 == null)) {
                throw new global::System.ArgumentNullException("__1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(@__1));
            }
            if ((@__2 == null)) {
                throw new global::System.ArgumentNullException("__2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(@__2));
            }
            if ((@__3 == null)) {
                throw new global::System.ArgumentNullException("__3");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(@__3));
            }
            if ((@__4 == null)) {
                throw new global::System.ArgumentNullException("__4");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(@__4));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(@__5));
            if ((@__6 == null)) {
                throw new global::System.ArgumentNullException("__6");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(@__6));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(@__7));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(@__8));
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(@__9));
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(@__10));
            if ((@__11.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(@__11.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int __, 
                    string @__1, 
                    string @__2, 
                    string @__3, 
                    string @__4, 
                    int @__5, 
                    string @__6, 
                    int @__7, 
                    int @__8, 
                    int @__9, 
                    int @__10, 
                    global::System.Nullable<int> @__11, 
                    int @__12, 
                    string @__13, 
                    string @__14, 
                    string @__15, 
                    string @__16, 
                    int @__17, 
                    string @__18, 
                    int @__19, 
                    int @__20, 
                    int @__21, 
                    int @__22, 
                    global::System.Nullable<int> @__24) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(__));
            if ((@__1 == null)) {
                throw new global::System.ArgumentNullException("__1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(@__1));
            }
            if ((@__2 == null)) {
                throw new global::System.ArgumentNullException("__2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(@__2));
            }
            if ((@__3 == null)) {
                throw new global::System.ArgumentNullException("__3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(@__3));
            }
            if ((@__4 == null)) {
                throw new global::System.ArgumentNullException("__4");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(@__4));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(@__5));
            if ((@__6 == null)) {
                throw new global::System.ArgumentNullException("__6");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(@__6));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(@__7));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(@__8));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(@__9));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(@__10));
            if ((@__11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(@__11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(@__12));
            if ((@__13 == null)) {
                throw new global::System.ArgumentNullException("__13");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(@__13));
            }
            if ((@__14 == null)) {
                throw new global::System.ArgumentNullException("__14");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(@__14));
            }
            if ((@__15 == null)) {
                throw new global::System.ArgumentNullException("__15");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(@__15));
            }
            if ((@__16 == null)) {
                throw new global::System.ArgumentNullException("__16");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(@__16));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(@__17));
            if ((@__18 == null)) {
                throw new global::System.ArgumentNullException("__18");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(@__18));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(@__19));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(@__20));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(@__21));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(@__22));
            if ((@__24.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(@__24.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string @__2, 
                    string @__3, 
                    string @__4, 
                    int @__5, 
                    string @__6, 
                    int @__7, 
                    int @__8, 
                    int @__9, 
                    int @__10, 
                    global::System.Nullable<int> @__11, 
                    int @__12, 
                    string @__13, 
                    string @__14, 
                    string @__15, 
                    string @__16, 
                    int @__17, 
                    string @__18, 
                    int @__19, 
                    int @__20, 
                    int @__21, 
                    int @__22, 
                    global::System.Nullable<int> @__24) {
            return this.Update(@__12, @__13, @__2, @__3, @__4, @__5, @__6, @__7, @__8, @__9, @__10, @__11, @__12, @__13, @__14, @__15, @__16, @__17, @__18, @__19, @__20, @__21, @__22, @__24);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private PLAYERSTableAdapter _pLAYERSTableAdapter;
        
        private SCORINGTableAdapter _sCORINGTableAdapter;
        
        private TEAMSTableAdapter _tEAMSTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PLAYERSTableAdapter PLAYERSTableAdapter {
            get {
                return this._pLAYERSTableAdapter;
            }
            set {
                this._pLAYERSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SCORINGTableAdapter SCORINGTableAdapter {
            get {
                return this._sCORINGTableAdapter;
            }
            set {
                this._sCORINGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TEAMSTableAdapter TEAMSTableAdapter {
            get {
                return this._tEAMSTableAdapter;
            }
            set {
                this._tEAMSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._pLAYERSTableAdapter != null) 
                            && (this._pLAYERSTableAdapter.Connection != null))) {
                    return this._pLAYERSTableAdapter.Connection;
                }
                if (((this._sCORINGTableAdapter != null) 
                            && (this._sCORINGTableAdapter.Connection != null))) {
                    return this._sCORINGTableAdapter.Connection;
                }
                if (((this._tEAMSTableAdapter != null) 
                            && (this._tEAMSTableAdapter.Connection != null))) {
                    return this._tEAMSTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._pLAYERSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sCORINGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tEAMSTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(testDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tEAMSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TEAMS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tEAMSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pLAYERSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PLAYERS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pLAYERSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sCORINGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SCORING.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sCORINGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(testDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tEAMSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TEAMS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tEAMSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pLAYERSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PLAYERS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pLAYERSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sCORINGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SCORING.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sCORINGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(testDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._sCORINGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SCORING.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sCORINGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pLAYERSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PLAYERS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pLAYERSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tEAMSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TEAMS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tEAMSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(testDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._pLAYERSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pLAYERSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sCORINGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sCORINGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tEAMSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tEAMSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._pLAYERSTableAdapter != null)) {
                    revertConnections.Add(this._pLAYERSTableAdapter, this._pLAYERSTableAdapter.Connection);
                    this._pLAYERSTableAdapter.Connection = ((global::NuoDb.Data.Client.NuoDbConnection)(workConnection));
                    this._pLAYERSTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._pLAYERSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pLAYERSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pLAYERSTableAdapter.Adapter);
                    }
                }
                if ((this._sCORINGTableAdapter != null)) {
                    revertConnections.Add(this._sCORINGTableAdapter, this._sCORINGTableAdapter.Connection);
                    this._sCORINGTableAdapter.Connection = ((global::NuoDb.Data.Client.NuoDbConnection)(workConnection));
                    this._sCORINGTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._sCORINGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sCORINGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sCORINGTableAdapter.Adapter);
                    }
                }
                if ((this._tEAMSTableAdapter != null)) {
                    revertConnections.Add(this._tEAMSTableAdapter, this._tEAMSTableAdapter.Connection);
                    this._tEAMSTableAdapter.Connection = ((global::NuoDb.Data.Client.NuoDbConnection)(workConnection));
                    this._tEAMSTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._tEAMSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tEAMSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tEAMSTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._pLAYERSTableAdapter != null)) {
                    this._pLAYERSTableAdapter.Connection = ((global::NuoDb.Data.Client.NuoDbConnection)(revertConnections[this._pLAYERSTableAdapter]));
                    this._pLAYERSTableAdapter.Transaction = null;
                }
                if ((this._sCORINGTableAdapter != null)) {
                    this._sCORINGTableAdapter.Connection = ((global::NuoDb.Data.Client.NuoDbConnection)(revertConnections[this._sCORINGTableAdapter]));
                    this._sCORINGTableAdapter.Transaction = null;
                }
                if ((this._tEAMSTableAdapter != null)) {
                    this._tEAMSTableAdapter.Connection = ((global::NuoDb.Data.Client.NuoDbConnection)(revertConnections[this._tEAMSTableAdapter]));
                    this._tEAMSTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591